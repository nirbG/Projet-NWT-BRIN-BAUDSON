{"version":3,"file":"http.service.js","sourceRoot":"","sources":["../../../src/module/services/http.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAA4C;AAE5C,8DAGoC;AAE3B,sBAJL,6BAAW,CAIK;AAGpB,IAAa,WAAW,GAAxB;IAII;;OAEG;IACH;QACI,IAAI,CAAC,KAAK,GAAG,sBAAI,CAAC;IACtB,CAAC;IAED;;;;OAIG;IACH,IAAI,OAAO;QACP,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;IAC9B,CAAC;IAED;;;;;;;OAOG;IACH,SAAS,CAAC,GAAW,EAAE,OAAqB;QACxC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IAC9C,CAAC;IAED;;;;;;;OAOG;IACH,GAAG,CAAC,GAAW,EAAE,OAAqB;QAClC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACxC,CAAC;IAED;;;;;;;OAOG;IACH,IAAI,CAAC,GAAW,EAAE,OAAqB;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC;IAED;;;;;;;OAOG;IACH,GAAG,CAAC,GAAW,EAAE,OAAqB;QAClC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACxC,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,GAAW,EAAE,OAAqB;QACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;;;OAOG;IACH,MAAM,CAAC,GAAW,EAAE,OAAqB;QACrC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED;;;;;;;OAOG;IACH,IAAI,CAAC,GAAW,EAAE,OAAqB;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC;IAED;;;;OAIG;IACH,GAAG;QACC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED;;;;;;OAMG;IACH,MAAM,CAAC,GAAW;QACd,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;CACJ,CAAA;AA3HY,WAAW;IADvB,iBAAU,EAAE;;GACA,WAAW,CA2HvB;AA3HY,kCAAW","sourcesContent":["import { Injectable } from '@hapiness/core';\nimport { Observable } from 'rxjs/Observable';\nimport {\n    RxCookieJar, RxHR, RxHttpRequest, RxHttpRequestResponse, Cookie, CoreOptions, Request, RequestAPI, RequiredUriUrl\n}\n    from '@akanass/rx-http-request';\n\nexport { RxCookieJar, Cookie, RequestAPI, Request, CoreOptions, RequiredUriUrl, RxHttpRequestResponse };\n\n@Injectable()\nexport class HttpService {\n    // private property to store RxHttpRequest instance\n    private _rxHR: RxHttpRequest;\n\n    /**\n     * Service constructor\n     */\n    constructor() {\n        this._rxHR = RxHR;\n    }\n\n    /**\n     * Function to get the HTTP request object\n     *\n     * @return {RequestAPI<Request, CoreOptions, RequiredUriUrl>}\n     */\n    get request(): RequestAPI<Request, CoreOptions, RequiredUriUrl> {\n        return this._rxHR.request;\n    }\n\n    /**\n     * Function to do a GET HTTP request and to return a buffer\n     *\n     * @param uri\n     * @param options\n     *\n     * @return {Observable<RxHttpRequestResponse>}\n     */\n    getBuffer(uri: string, options?: CoreOptions): Observable<RxHttpRequestResponse> {\n        return this._rxHR.getBuffer(uri, options);\n    }\n\n    /**\n     * Function to do a GET HTTP request\n     *\n     * @param uri {string}\n     * @param options {CoreOptions}\n     *\n     * @return {Observable<RxHttpRequestResponse>}\n     */\n    get(uri: string, options?: CoreOptions): Observable<RxHttpRequestResponse> {\n        return this._rxHR.get(uri, options);\n    }\n\n    /**\n     * Function to do a POST HTTP request\n     *\n     * @param uri {string}\n     * @param options {CoreOptions}\n     *\n     * @return {Observable<RxHttpRequestResponse>}\n     */\n    post(uri: string, options?: CoreOptions): Observable<RxHttpRequestResponse> {\n        return this._rxHR.post(uri, options);\n    }\n\n    /**\n     * Function to do a PUT HTTP request\n     *\n     * @param uri {string}\n     * @param options {CoreOptions}\n     *\n     * @return {Observable<RxHttpRequestResponse>}\n     */\n    put(uri: string, options?: CoreOptions): Observable<RxHttpRequestResponse> {\n        return this._rxHR.put(uri, options);\n    }\n\n    /**\n     * Function to do a PATCH HTTP request\n     *\n     * @param uri {string}\n     * @param options {CoreOptions}\n     *\n     * @return {Observable<RxHttpRequestResponse>}\n     */\n    patch(uri: string, options?: CoreOptions): Observable<RxHttpRequestResponse> {\n        return this._rxHR.patch(uri, options);\n    }\n\n    /**\n     * Function to do a DELETE HTTP request\n     *\n     * @param uri {string}\n     * @param options {CoreOptions}\n     *\n     * @return {Observable<RxHttpRequestResponse>}\n     */\n    delete(uri: string, options?: CoreOptions): Observable<RxHttpRequestResponse> {\n        return this._rxHR.delete(uri, options);\n    }\n\n    /**\n     * Function to do a HEAD HTTP request\n     *\n     * @param uri {string}\n     * @param options {CoreOptions}\n     *\n     * @return {Observable<RxHttpRequestResponse>}\n     */\n    head(uri: string, options?: CoreOptions): Observable<RxHttpRequestResponse> {\n        return this._rxHR.head(uri, options);\n    }\n\n    /**\n     * Function that creates a new rx cookie jar\n     *\n     * @return {Observable<RxCookieJar>}\n     */\n    jar(): Observable<RxCookieJar> {\n        return this._rxHR.jar();\n    }\n\n    /**\n     * Function that creates a new cookie\n     *\n     * @param str {string}\n     *\n     * @return {Observable<Cookie>}\n     */\n    cookie(str: string): Observable<Cookie> {\n        return this._rxHR.cookie(str);\n    }\n}\n"]}