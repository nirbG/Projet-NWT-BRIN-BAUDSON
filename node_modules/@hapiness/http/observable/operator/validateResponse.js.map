{"version":3,"file":"validateResponse.js","sourceRoot":"","sources":["../../../src/observable/operator/validateResponse.ts"],"names":[],"mappings":";;AAEA,gDAA6C;AAC7C,yCAAsC;AACtC,2BAA2B;AAE3B;;;;;;;GAOG;AAEH,0BAEQ,SAAqB,GAAG,CAAC,GAAG,EAAE,EAC9B,oBAA8B,EAAE;IAEpC,MAAM,CAAC,WAAW,CAAI,MAAM,EAAE,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC;AACzD,CAAC;AANH,4CAMG;AAEH,qBAAwB,MAAkB,EAAE,iBAA2B;IACnE,MAAM,CAAC,CAAC,MAAuB,EAAE,EAAE,CAAgB,MAAM,CAAC,IAAI,CAAC,IAAI,wBAAwB,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC,CAAC;AAC5H,CAAC;AAED;;GAEG;AACH;IACI;;;;;OAKG;IACH,YAAoB,OAAmB,EAAU,kBAA4B;QAAzD,YAAO,GAAP,OAAO,CAAY;QAAU,uBAAkB,GAAlB,kBAAkB,CAAU;IAAG,CAAC;IAEjF;;;;;;;OAOG;IACH,IAAI,CAAC,UAA2B,EAAE,MAAW;QACzC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,0BAA0B,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC/G,CAAC;CACJ;AAED;;GAEG;AACH,gCAAoC,SAAQ,uBAAe;IACvD;;;;;;;OAOG;IACH,YAAY,WAA0B,EAClB,OAAmB,EAAU,kBAA4B;QACzE,KAAK,CAAC,WAAW,CAAC,CAAC;QADH,YAAO,GAAP,OAAO,CAAY;QAAU,uBAAkB,GAAlB,kBAAkB,CAAU;IAE7E,CAAC;IAED;;;;;;OAMG;IACO,KAAK,CAAC,IAAS;QAErB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,IAAI,GAAG;gBAC/B,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC5D,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAChC,IAAI,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;gBACvC,CAAC;gBACD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/G,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE;oBAC9C,YAAY,EAAE;wBACV,MAAM,EAAE,KAAK;wBACb,OAAO,EAAE,IAAI;qBAChB;iBACJ,CAAC,CAAC;gBACH,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;oBACd,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACjC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAChC,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;CACJ","sourcesContent":["import { Observable } from 'rxjs/Observable';\nimport { Operator } from 'rxjs/Operator';\nimport { Subscriber } from 'rxjs/Subscriber';\nimport { Biim } from '@hapiness/biim';\nimport * as Joi from 'joi';\n\n/**\n * New observable operator\n *\n * @param schema {Joi.Schema} - Joi Schema to validate the body response\n * @param ignoreStatusCodes - statusCodes to ignore while creating Biim error\n *\n * @return {Observable<T>|WebSocketSubject<T>}\n */\n\nexport function validateResponse<R>(\n        this: Observable<any>,\n        schema: Joi.Schema = Joi.any(),\n        ignoreStatusCodes: number[] = []): Observable<R> {\n\n    return higherOrder<R>(schema, ignoreStatusCodes)(this);\n  }\n\nfunction higherOrder<R>(schema: Joi.Schema, ignoreStatusCodes: number[]): (source: Observable<any>) => Observable<R> {\n    return (source: Observable<any>) => <Observable<R>>source.lift(new ValidateResponseOperator(schema, ignoreStatusCodes));\n}\n\n/**\n * Operator class definition\n */\nclass ValidateResponseOperator<R> implements Operator<any, R> {\n    /**\n     * Class constructor\n     *\n     * @param _schema {Joi.Schema}\n     * @param _ignoreStatusCodes {number[]}\n     */\n    constructor(private _schema: Joi.Schema, private _ignoreStatusCodes: number[]) {}\n\n    /**\n     * Function calls when operator is executing\n     *\n     * @param subscriber current subscriber\n     * @param source subscriber source\n     *\n     * @return {AnonymousSubscription|Subscription|Promise<PushSubscription>|TeardownLogic}\n     */\n    call(subscriber: Subscriber<any>, source: any): any {\n        return source.subscribe(new ValidateResponseSubscriber(subscriber, this._schema, this._ignoreStatusCodes));\n    }\n}\n\n/**\n * Operator subscriber class definition\n */\nclass ValidateResponseSubscriber<R> extends Subscriber<any> {\n    /**\n     * Class constructor\n     *\n     * @param destination subscriber destination\n     * @param _source subscriber source\n     * @param _schema {Joi.Schema}\n     * @param _ignoreStatusCodes {number[]}\n     */\n    constructor(destination: Subscriber<R>,\n                private _schema: Joi.Schema, private _ignoreStatusCodes: number[]) {\n        super(destination);\n    }\n\n    /**\n     * Function to send result to next subscriber\n     *\n     * @param data result for next subscriber\n     *\n     * @private\n     */\n    protected _next(data: any): void {\n\n        if (!!data.response) {\n            if (data.response.statusCode >= 400 &&\n                this._ignoreStatusCodes.indexOf(data.response.statusCode) < 0) {\n                    if (typeof data.body !== 'object') {\n                        data.body = { message: data.body };\n                    }\n                    this.destination.error(Biim.create(data.response.statusCode, data.body.message, data.body, data.body));\n            } else {\n                const res = Joi.validate(data.body, this._schema, {\n                    stripUnknown: {\n                        arrays: false,\n                        objects: true,\n                    }\n                });\n                if (!!res.error) {\n                    this.destination.error(Biim.wrap(res.error));\n                } else {\n                    this.destination.next(res.value);\n                    this.destination.complete();\n                }\n            }\n        }\n    }\n}\n"]}