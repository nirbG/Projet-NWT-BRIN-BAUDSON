{"version":3,"file":"manager.js","sourceRoot":"","sources":["../../../../src/extensions/event-manager/manager.ts"],"names":[],"mappings":";;AAAA,+BAA2C;AAC3C,qCAA4C;AAO5C;IAAA;QAEY,YAAO,GAAG,IAAI,cAAO,EAAa,CAAC;QACnC,WAAM,GAAG,IAAI,qBAAc,CAAC,eAAe,CAAC,CAAC;IAyCzD,CAAC;IAvCG;;;;;OAKG;IACI,EAAE,CAAC,IAAY;QAClB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,IAAI,EAAE,CAAC,CAAC;QAC/C,OAAO,IAAI;aACN,OAAO;aACP,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;IAC7C,CAAC;IAED;;;;;;OAMG;IACI,IAAI,CAAC,IAAY,EAAE,IAAS;QAC/B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,IAAI,EAAE,CAAC,CAAC;QAC1C,IAAI;aACC,OAAO;aACP,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED;;;;OAIG;IACI,KAAK;QACR,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACpC,IAAI;aACC,OAAO;aACP,QAAQ,EAAE,CAAC;IACpB,CAAC;CAEJ;AA5CD,oCA4CC","sourcesContent":["import { Subject, Observable } from 'rxjs';\nimport { InternalLogger } from '../../core';\n\nexport interface EventData {\n    type: string;\n    data: any;\n}\n\nexport class EventManager {\n\n    private stream$ = new Subject<EventData>();\n    private logger = new InternalLogger('event-manager');\n\n    /**\n     * Add a listener filtered on type\n     *\n     * @param  {string} type\n     * @returns Observable\n     */\n    public on(type: string): Observable<EventData> {\n        this.logger.debug(`listener added on ${type}`);\n        return this\n            .stream$\n            .filter(_ => !!_ && _.type === type);\n    }\n\n    /**\n     * Emit data for type\n     *\n     * @param  {string} type\n     * @param  {any} data\n     * @returns void\n     */\n    public emit(type: string, data: any): void {\n        this.logger.debug(`send data on ${type}`);\n        this\n            .stream$\n            .next({ type, data });\n    }\n\n    /**\n     * Close the stream event\n     *\n     * @returns void\n     */\n    public close(): void {\n        this.logger.debug(`manager closed`);\n        this\n            .stream$\n            .complete();\n    }\n\n}\n"]}