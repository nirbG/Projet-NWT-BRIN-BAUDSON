"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("../../core");
const _1 = require("./");
let EventService = class EventService {
    constructor(manager) {
        this.manager = manager;
    }
    /**
     * Add listener on type
     *
     * @returns EventData
     */
    on(type) {
        return this.manager.on(type);
    }
    /**
     * Send data for type
     *
     * @param  {string} type
     * @param  {any} data
     * @returns void
     */
    emit(type, data) {
        this.manager.emit(type, data);
    }
};
EventService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject(_1.EventManagerExt)),
    __metadata("design:paramtypes", [_1.EventManager])
], EventService);
exports.EventService = EventService;
//# sourceMappingURL=service.js.map